//
//  TabbarPresenter.swift
//  citychat
//
//  Created by Levente Vig on 2019. 07. 12..
//  Copyright (c) 2019. CodeYard. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

protocol CustomTabbarProtocol: class {
    func goToTab(index: Int)
}

final class TabbarPresenter: NSObject {
    
    // MARK: - Public properties -

    // MARK: - Private properties -

    private unowned let view: TabbarViewInterface
    private let interactor: TabbarInteractorInterface
    private let wireframe: TabbarWireframeInterface
    private var selectedTab: Int = 0

    // MARK: - Lifecycle -

    init(view: TabbarViewInterface, interactor: TabbarInteractorInterface, wireframe: TabbarWireframeInterface, selectedTab: Int) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        self.selectedTab = selectedTab
    }
    
}

// MARK: - Extensions -

extension TabbarPresenter: TabbarPresenterInterface {
    
    func viewDidLoad() {
        view.set(controllers: setupViewControllers())
        view.select(tab: selectedTab)
        
        let userId = UserDefaults.standard.integer(forKey: Constants.UserDefaults.UserId)
        interactor.getProfile(profileId: userId) { result in
            switch result {
            case .success(let profileResponse):
                if let user = profileResponse.data?[0] {
                    self.interactor.createCart(customerId: user.id ?? 0) { cartResult in
                        switch cartResult {
                        case .success(let cartResponse):
                            user.cartId = cartResponse.cartId
                            UserManager.shared.loggedInUser = user
                        case .failure(let error):
                            log.error(error.localizedDescription)
                        }
                    }
                }
            case .failure(let error):
                log.error(error.localizedDescription)
            }
        }
    }
    
    func setupViewControllers() -> [UIViewController] {
        
        let homeNav = BaseNavigationController()
        homeNav.pushWireframe(HomeWireframe())
    
        let searchNav = BaseNavigationController()
        searchNav.pushWireframe(SearchWireframe(tabbarProtocol: self))
        
        let cartNav = BaseNavigationController()
        cartNav.pushWireframe(CartWireframe())
        
        let profileNav = BaseNavigationController()
        profileNav.pushWireframe(ProfileWireframe())
        
        let controllers: [UIViewController] = [
            homeNav,
            searchNav,
            cartNav,
            profileNav
        ]
        
        return controllers
    }
    
}

extension TabbarPresenter: CustomTabbarProtocol {
    func goToTab(index: Int) {
        view.select(tab: index)
    }
}
