//
//  SearchPresenter.swift
//  Webshop
//
//  Created by Geszti Bence on 2020. 10. 17..
//  Copyright (c) 2020. GesBen. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class SearchPresenter {

    // MARK: - Private properties -

    private unowned let view: SearchViewInterface
    private let interactor: SearchInteractorInterface
    private let wireframe: SearchWireframeInterface
    
    private var searchCells = Array.init(repeating: SearchCellModel(), count: 6)

    // MARK: - Lifecycle -

    init(view: SearchViewInterface, interactor: SearchInteractorInterface, wireframe: SearchWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
    
    func viewDidLoad() {
        interactor.getSearchCells { [weak self] items in
            self?.searchCells = items
            self?.view.reload()
        }
    }
}

// MARK: - Extensions -

extension SearchPresenter: SearchPresenterInterface {
    func itemSelected(_ row: Int) {
        wireframe.showSelectedCategory()
    }
    
    func getItems() -> [SearchCellModel] {
        searchCells
    }
    
    func getItem(_ row: Int) -> SearchCellModel {
        searchCells[row]
    }
    
    func getSearchCount() -> Int {
        searchCells.count
    }
    
}
